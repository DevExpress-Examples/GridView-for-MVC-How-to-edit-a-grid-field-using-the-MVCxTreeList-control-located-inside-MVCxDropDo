@using WebApplication1.Models

@model List<License>

@Html.DevExpress().TreeList(settings => {
    settings.Name = "TreeList1";
    settings.KeyFieldName = "LicenseID";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "TreeListPartial" };
    settings.CustomActionRouteValues = new { Controller = "Home", Action = "TreeListCustomPartial" };
    settings.Columns.Add("LicenseName", MVCxTreeListColumnType.TextBox);
    settings.Columns.Add("LicenseID", MVCxTreeListColumnType.TextBox);
    settings.ParentFieldName = "ParentLicenseID";
    settings.Width = new Unit(98, UnitType.Percentage);
    settings.SettingsSelection.Enabled = true;
    settings.SettingsSelection.AllowSelectAll = true;
    settings.ClientSideEvents.EndCallback = "OnTreeListEndCallback";
    settings.BeforeGetCallbackResult = (sender, e) => {
        MVCxTreeList tl = sender as MVCxTreeList;
        if (ViewBag.Selection != null) {
            tl.UnselectAll();
            if (ViewBag.Selection != String.Empty) {
                string textsString = ViewBag.Selection;
                var texts = textsString.Split(',');
                List<string> nodesText = new List<string>();
                foreach (var text in texts) {
                    tl.FindNodesByFieldValue("LicenseName", text).ForEach(node => {
                        if (!node.Selected) {
                            node.Selected = true;
                            nodesText.Add(node.GetValue("LicenseName").ToString());
                        }
                    });
                }
                tl.JSProperties.Add("cp_selectedTexts", nodesText);
            }
        }
    };
}).Bind(Model).GetHtml()
